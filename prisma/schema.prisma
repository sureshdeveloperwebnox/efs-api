generator client {
  provider = "prisma-client-js"
  // output   = "./generated/prisma-client" // specify the output directory
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PlanType {
  FREE
  STANDARD
  PROFESSIONAL
}

enum UserRole {
  ADMIN
  STAFF
  TECHNICIAN
  DISPATCHER
  CUSTOMER
  EMPLOYEE
}

enum ProficiencyLevel {
  BEGINNER
  INTERMEDIATE
  EXPERT
}

enum DayOfWeek {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

enum RequestStatus {
  PENDING
  APPROVED
  DENIED
}

enum EquipmentStatus {
  AVAILABLE
  IN_USE
  UNDER_MAINTENANCE
  DAMAGED
}

enum AssetStatus {
  OPERATIONAL
  NEEDS_MAINTENANCE
  UNDER_REPAIR
  DECOMMISSIONED
}

enum Frequency {
  DAILY
  WEEKLY
  BIWEEKLY
  MONTHLY
  QUARTERLY
  SEMIANNUALLY
  ANNUALLY
  CUSTOM
}

enum FrequencyUnitType {
  DAYS
  WEEKS
  MONTHS
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum WorkOrderStatus {
  PENDING
  ASSIGNED
  CONFIRMED
  ACTIVE
  COMPLETED
  APPROVED
  CLOSED
  CANCELLED
}

enum WorkOrderTaskStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum InvoiceStatus {
  PENDING
  PAID
  CANCELLED
  OVERDUE
}

enum PaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  BANK_TRANSFER
  CASH
  CHECK
  PAYPAL
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum NotificationType {
  ALERT
  WARNING
  ERROR
}

enum NotificationStatus {
  PENDING
  READ
  DISMISSED
}

enum LogType {
  USER
  WORK_ORDER
  SERVICE
  INVOICE
  ASSET
}

model organizations {
  id                      BigInt              @id @default(autoincrement())
  name                    String              @default("") @db.VarChar(100)
  email                   String              @default("") @db.VarChar(100)
  address                 String              @default("") @db.Text
  phone                   String              @default("") @db.VarChar(20)
  organization_name       String              @default("") @db.VarChar(100)
  industry_name           String              @default("") @db.VarChar(100)
  pincode                 String              @default("") @db.VarChar(10)
  website                 String              @default("") @db.VarChar(100)
  timezone                String              @default("") @db.VarChar(50)
  plan_type               PlanType            @default(FREE)
  subscription_start_date String              @default("") @db.VarChar(50)
  subscription_end_date   String              @default("") @db.VarChar(50)
  file_storage_limit      BigInt              @default(1)
  data_storage_limit      BigInt              @default(1)
  created_at              String              @default("") @db.VarChar(50)
  updated_at              String              @default("") @db.VarChar(50)
  currencyid              BigInt              @default(1)
  users                   users[]
  user_skills             user_skills[]
  business_hours          business_hours[]
  holidays                holidays[]
  crew_members            crew_members[]
  equipments              equipments[]
  companies               companies[]
  customers               customers[]
  services                services[]
  assets                  assets[]
  parts                   parts[]
  maintenance_plans       maintenance_plans[]
  work_orders             work_orders[]
  service_types           service_types[]
  crews                   crews[]
  employee_role           employee_role[]
  employee                employee[]
}

model users {
  id                     BigInt              @id @default(autoincrement())
  organization_id        BigInt              @map("organization_id")
  email                  String              @unique @default("") @db.VarChar(100)
  password_hash          String              @default("") @db.VarChar(100)
  isVerified_Email       Boolean             @default(false)
  isVerified_PhoneNumber Boolean             @default(false)
  name                   String              @default("")
  first_name             String              @default("") @db.VarChar(50)
  last_name              String              @default("") @db.VarChar(50)
  phone                  String              @default("") @db.VarChar(20)
  job_title              String              @default("") @db.VarChar(100)
  user_type              UserRole            @default(CUSTOMER)
  is_active              Int                 @default(0) @db.SmallInt
  last_login_at          String              @default("") @db.VarChar(50)
  email_verified         Boolean             @default(false)
  created_at             String              @default("") @db.VarChar(50)
  updated_at             String              @default("") @db.VarChar(50)
  organizations          organizations       @relation(fields: [organization_id], references: [id])
  user_skills            user_skills[]
  time_off_requests      time_off_requests[]
  crew_members           crew_members[]
  notifications          notifications[]
  audit_logs             audit_logs[]
  customers              customers[]
  crews                  crews[]
  employee               employee[]
  tokens                 tokens[]

  @@index([organization_id], name: "users_organization_idx")
  @@map("users")
}

model user_role {
  id            BigInt @id @default(autoincrement())
  name          String @default("") @db.VarChar(50)
  access_rights Json   @default("{}")
  created_at    String @default("") @db.VarChar(50)
  updated_at    String @default("") @db.VarChar(50)
}

model currencies {
  id            BigInt  @id @default(autoincrement())
  code          String  @db.VarChar(10)
  name          String  @db.VarChar(50)
  exchange_rate Decimal @db.Decimal(10, 4)
  is_default    Boolean @default(true)
  created_at    String  @default("") @db.VarChar(50)
  updated_at    String  @default("") @db.VarChar(50)
}

model user_role_assignments {
  id          BigInt @id @default(autoincrement())
  user_id     BigInt @default(0)
  profile_id  BigInt @default(0)
  assigned_at String @default("") @db.VarChar(50)
  created_at  String @default("") @db.VarChar(50)
  updated_at  String @default("") @db.VarChar(50)

  @@index([user_id], name: "users_user_idx")
  @@map("user_role_assignments")
}

model skills {
  id          BigInt        @id @default(autoincrement())
  name        String        @default("") @db.VarChar(50)
  description String        @default("") @db.Text
  created_at  String        @default("") @db.VarChar(50)
  updated_at  String        @default("") @db.VarChar(50)
  user_skills user_skills[]
}

model user_skills {
  id                BigInt           @id @default(autoincrement())
  user_id           BigInt
  skill_id          BigInt           @default(0)
  organization_id   BigInt
  proficiency_level ProficiencyLevel @default(BEGINNER)
  created_at        String           @default("")
  updated_at        String           @default("")

  // Relations
  users         users         @relation(fields: [user_id], references: [id])
  skills        skills        @relation(fields: [skill_id], references: [id])
  organizations organizations @relation(fields: [organization_id], references: [id])

  // Composite unique constraint to prevent duplicate skill assignments
  // @@unique([user_id, skill_id, organization_id], name: "user_skill_organization_unique")
  // Indexes for better query performance
  @@index([user_id], name: "user_skills_user_idx")
  @@index([skill_id], name: "user_skills_skill_idx")
  @@index([organization_id], name: "user_skills_organization_idx")
  @@map("user_skills")
}

model business_hours {
  id              BigInt    @id @default(autoincrement())
  organization_id BigInt
  day_of_week     DayOfWeek @default(SUNDAY)
  start_time      String    @db.VarChar(50)
  end_time        String    @db.VarChar(50)
  created_at      String    @db.VarChar(50)
  updated_at      String    @default("") @db.VarChar(50)

  organizations organizations @relation(fields: [organization_id], references: [id])

  @@index([organization_id], name: "business_hours_organization_id_x")
  @@map("business_hours")
}

model holidays {
  id              BigInt @id @default(autoincrement())
  organization_id BigInt
  name            String @db.VarChar(100)
  holiday_date    String @db.VarChar(20)
  is_recurring    Int    @default(0) @db.SmallInt
  created_at      String @db.VarChar(50)
  updated_at      String @default("") @db.VarChar(50)

  organizations organizations @relation(fields: [organization_id], references: [id])

  @@index([organization_id], name: "holidays_organization_idx")
  @@map("holidays")
}

model time_off_requests {
  id         BigInt        @id @default(autoincrement())
  user_id    BigInt        @default(0)
  start_date String        @db.VarChar(20)
  end_date   String        @db.VarChar(20)
  reason     String        @db.Text
  status     RequestStatus @default(PENDING)
  created_at String        @db.VarChar(50)
  updated_at String        @default("") @db.VarChar(50)

  users users @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "time_off_requests_user_idx")
  @@map("time_off_requests")
}

model crews {
  id              BigInt            @id @default(autoincrement())
  organization_id BigInt
  name            String            @db.VarChar(50)
  leader_id       BigInt            @default(0)
  created_at      String            @db.VarChar(50)
  updated_at      String            @default("") @db.VarChar(50)
  organizations   organizations     @relation(fields: [organization_id], references: [id])
  users           users             @relation(fields: [leader_id], references: [id])
  crew_members    crew_members[]
  work_order_crew work_order_crew[]

  @@index([organization_id], name: "crew_organization_idx")
  @@index([leader_id], name: "crew_leader_idx")
}

model crew_members {
  id              BigInt        @id @default(autoincrement())
  organization_id BigInt
  crew_id         BigInt        @default(0)
  user_id         BigInt        @default(0)
  role            String        @db.VarChar(50)
  created_at      String        @db.VarChar(50)
  updated_at      String        @default("") @db.VarChar(50)
  organizations   organizations @relation(fields: [organization_id], references: [id])
  crews           crews         @relation(fields: [crew_id], references: [id])
  users           users         @relation(fields: [user_id], references: [id])

  @@index([organization_id], name: "crew_members_organization_idx")
  @@index([crew_id], name: "crew_members_crew_idx")
  @@index([user_id], name: "crew_members_user_idx")
  @@map("crew_members")
}

model equipments {
  id                BigInt          @id @default(autoincrement())
  organization_id   BigInt
  name              String          @default("") @db.VarChar(100)
  equipment_type    String          @db.VarChar(100)
  status            EquipmentStatus @default(AVAILABLE)
  location          String          @default("") @db.Text
  availability_date String          @db.VarChar(20)
  created_at        String          @db.VarChar(50)
  updated_at        String          @default("") @db.VarChar(50)
  organizations     organizations   @relation(fields: [organization_id], references: [id])

  @@index([organization_id], name: "equipments_organization_idx")
  @@map("equipments")
}

model companies {
  id              BigInt        @id @default(autoincrement())
  organization_id BigInt
  name            String        @db.VarChar(100)
  industry        String        @db.VarChar(100)
  tax_id          String        @db.VarChar(50)
  address         String        @db.Text
  phone           String        @unique @db.VarChar(20)
  email           String        @unique @db.VarChar(100)
  website         String        @db.VarChar(100)
  created_at      String        @default("") @db.VarChar(50)
  updated_at      String        @default("") @db.VarChar(50)
  organizations   organizations @relation(fields: [organization_id], references: [id])
  customers       customers[]
  work_orders     work_orders[]

  @@index([organization_id], name: "companies_organization_idx")
  @@map("companies")
}

model customers {
  id              BigInt        @id @default(autoincrement())
  organization_id BigInt        @default(0)
  user_id         BigInt        @default(0)
  company_id      BigInt        @default(0)
  first_name      String        @db.VarChar(100)
  last_name       String        @db.VarChar(100)
  email           String        @unique @db.VarChar(100)
  phone           String        @unique @db.VarChar(20)
  address         String        @db.Text
  is_active       Int           @default(0) @db.SmallInt
  created_at      String        @default("") @db.VarChar(50)
  updated_at      String        @default("") @db.VarChar(50)
  organizations   organizations @relation(fields: [organization_id], references: [id])
  companies       companies     @relation(fields: [company_id], references: [id])
  users           users         @relation(fields: [user_id], references: [id])
  assets          assets[]
  work_orders     work_orders[]

  @@index([organization_id], name: "customers_organization_idx")
  @@index([user_id], name: "customers_user_idx")
  @@index([company_id], name: "customers_company_idx")
  @@map("customers")
}

model services {
  id                  BigInt                @id @default(autoincrement())
  organization_id     BigInt
  name                String                @default("")
  description         String                @db.Text
  duration            Int                   @default(0)
  price               Decimal               @db.Decimal(10, 2)
  required_skills     Json                  @default("{}")
  created_at          String                @default("") @db.VarChar(50)
  updated_at          String                @default("") @db.VarChar(50)
  organizations       organizations         @relation(fields: [organization_id], references: [id])
  work_order_services work_order_services[]
  invoice_items       invoice_items[]

  @@index([organization_id], name: "services_organization_idx")
  @@map("services")
}

model service_types {
  id              BigInt        @id @default(autoincrement())
  organization_id BigInt
  name            String        @db.Text
  description     String        @db.Text
  created_at      String        @default("") @db.VarChar(50)
  updated_at      String        @default("") @db.VarChar(50)
  organizations   organizations @relation(fields: [organization_id], references: [id])

  @@index([organization_id], name: "service_types_organization_idx")
  @@map("service_types")
}

model assets {
  id                BigInt              @id @default(autoincrement())
  organization_id   BigInt
  customer_id       BigInt              @default(0)
  asset_name        String              @db.VarChar(100)
  serial_number     String              @db.VarChar(50)
  model             String              @db.VarChar(100)
  manufacturer      String              @db.VarChar(100)
  status            AssetStatus         @default(OPERATIONAL)
  location          String              @db.Text
  notes             String              @db.Text
  purchase_date     String              @db.VarChar(50)
  warranty_expiry   String              @db.VarChar(50)
  created_at        String              @default("") @db.VarChar(50)
  updated_at        String              @default("") @db.VarChar(50)
  organizations     organizations       @relation(fields: [organization_id], references: [id])
  customers         customers           @relation(fields: [customer_id], references: [id])
  work_orders       work_orders[]
  work_order_assets work_order_assets[]

  @@index([organization_id], name: "assets_organization_idx")
  @@index([customer_id], name: "assets_customer_idx")
  @@map("assets")
}

model parts {
  id              BigInt          @id @default(autoincrement())
  organization_id BigInt
  name            String          @db.VarChar(100)
  description     String          @db.Text
  price           Decimal         @db.Decimal(10, 2)
  inventory_count Int
  reorder_level   Int
  created_at      String          @default("") @db.VarChar(50)
  updated_at      String          @default("") @db.VarChar(50)
  organizations   organizations   @relation(fields: [organization_id], references: [id])
  invoice_items   invoice_items[]

  @@index([organization_id], name: "parts_organization_idx")
  @@map("parts")
}

model maintenance_plans {
  id                      BigInt                    @id @default(autoincrement())
  organization_id         BigInt
  name                    String                    @db.VarChar(100)
  description             String                    @db.Text
  start_date              String                    @db.VarChar(50)
  end_date                String                    @db.VarChar(50)
  frequency               Frequency                 @default(DAILY)
  frequency_unit          Int                       @default(0)
  frequency_unit_type     FrequencyUnitType         @default(DAYS)
  is_active               Int                       @db.SmallInt
  created_at              String                    @default("") @db.VarChar(50)
  updated_at              String                    @default("") @db.VarChar(50)
  organizations           organizations             @relation(fields: [organization_id], references: [id])
  maintenance_plan_assets maintenance_plan_assets[]
  work_orders             work_orders[]

  @@index([organization_id], name: "maintenance_plans_organization_idx")
  @@map("maintenance_plans")
}

model maintenance_plan_assets {
  id                  BigInt            @id @default(autoincrement())
  maintenance_plan_id BigInt            @default(0)
  asset_id            BigInt            @default(0)
  assigned_at         String            @db.VarChar(50)
  created_at          String            @default("") @db.VarChar(50)
  updated_at          String            @default("") @db.VarChar(50)
  maintenance_plans   maintenance_plans @relation(fields: [maintenance_plan_id], references: [id])

  @@index([maintenance_plan_id], name: "maintenance_plan_assets_maintenance_plan_idx")
  @@map("maintenance_plan_assets")
}

model work_orders {
  id                   BigInt                 @id @default(autoincrement())
  organization_id      BigInt                 @default(0)
  customer_id          BigInt                 @default(0)
  company_id           BigInt                 @default(0)
  asset_id             BigInt?                @default(0)
  maintenance_plan_id  BigInt?                @default(0)
  title                String                 @db.VarChar(255)
  description          String                 @db.Text
  priority             Priority               @default(HIGH)
  status               WorkOrderStatus        @default(PENDING)
  assigned_to          BigInt?                @default(0)
  assigned_crew_id     Int?                   @default(0)
  assigned_at          String?                @db.VarChar(50)
  scheduled_start_date String                 @db.VarChar(50)
  scheduled_end_date   String                 @db.VarChar(50)
  actual_start_date    String                 @db.VarChar(50)
  actual_end_date      String                 @db.VarChar(50)
  currency_id          Int?                   @default(0)
  estimated_cost       Decimal                @db.Decimal(10, 2)
  actual_cost          Decimal                @db.Decimal(10, 2)
  address              String                 @db.Text
  city                 String                 @db.VarChar(50)
  state                String                 @db.VarChar(50)
  postal_code          String                 @db.VarChar(20)
  country              String                 @db.VarChar(50)
  is_multi_day         Int?                   @default(0) @db.SmallInt
  created_at           String                 @default("") @db.VarChar(50)
  updated_at           String                 @default("") @db.VarChar(50)
  organizations        organizations          @relation(fields: [organization_id], references: [id])
  customers            customers              @relation(fields: [customer_id], references: [id])
  companies            companies              @relation(fields: [company_id], references: [id])
  assets               assets?                @relation(fields: [asset_id], references: [id])
  maintenance_plans    maintenance_plans?     @relation(fields: [maintenance_plan_id], references: [id])
  work_order_services  work_order_services[]
  work_order_tasks     work_order_tasks[]
  work_order_assets    work_order_assets[]
  work_order_crew      work_order_crew[]
  work_order_approvals work_order_approvals[]
  invoices             invoices[]

  @@index([organization_id], name: "work_orders_organization_idx")
  @@index([company_id], name: "work_orders_company_idx")
  @@index([customer_id], name: "work_orders_customer_idx")
  @@index([asset_id], name: "work_orders_asset_idx")
  @@index([maintenance_plan_id], name: "work_orders_maintenance_plan_idx")
  @@map("work_orders")
}

model work_order_services {
  id            BigInt      @id @default(autoincrement())
  work_order_id BigInt      @default(0)
  service_id    BigInt      @default(0)
  quantity      Int         @default(0)
  service_cost  Decimal     @db.Decimal(10, 2)
  created_at    String      @default("") @db.VarChar(50)
  updated_at    String      @default("") @db.VarChar(50)
  work_orders   work_orders @relation(fields: [work_order_id], references: [id])
  services      services    @relation(fields: [service_id], references: [id])

  @@index([work_order_id], name: "work_order_services_work_order_idx")
  @@index([service_id], name: "work_order_services_service_idx")
  @@map("work_order_services")
}

model work_order_tasks {
  id               BigInt              @id @default(autoincrement())
  work_order_id    BigInt              @default(0)
  task_name        String              @db.VarChar(255)
  task_description String              @db.Text
  assigned_to      BigInt              @default(0)
  status           WorkOrderTaskStatus @default(NOT_STARTED)
  due_date         String              @db.VarChar(50)
  created_at       String              @default("") @db.VarChar(50)
  updated_at       String              @default("") @db.VarChar(50)
  work_orders      work_orders         @relation(fields: [work_order_id], references: [id])

  @@index([work_order_id], name: "work_order_tasks_work_order_idx")
  @@map("work_order_tasks")
}

model work_order_assets {
  id            BigInt      @id @default(autoincrement())
  work_order_id BigInt      @default(0)
  asset_id      BigInt      @default(0)
  quantity      Int         @default(0)
  created_at    String      @default("") @db.VarChar(50)
  updated_at    String      @default("") @db.VarChar(50)
  work_orders   work_orders @relation(fields: [work_order_id], references: [id])
  assets        assets      @relation(fields: [asset_id], references: [id])

  @@index([work_order_id], name: "work_order_assets_work_order_idx")
  @@index([asset_id], name: "work_order_assets_asset_idx")
  @@map("work_order_assets")
}

model work_order_crew {
  id            BigInt      @id @default(autoincrement())
  work_order_id BigInt      @default(0)
  crew_id       BigInt      @default(0)
  assigned_at   String      @db.VarChar(50)
  created_at    String      @default("") @db.VarChar(50)
  updated_at    String      @default("") @db.VarChar(50)
  work_orders   work_orders @relation(fields: [work_order_id], references: [id])
  crews         crews       @relation(fields: [crew_id], references: [id])

  @@index([work_order_id], name: "work_order_crew_work_order_idx")
  @@index([crew_id], name: "work_order_crew_crew_idx")
  @@map("work_order_crew")
}

model work_order_approvals {
  id              BigInt         @id @default(autoincrement())
  work_order_id   BigInt         @default(0)
  approved_by     BigInt         @default(0)
  approval_status ApprovalStatus @default(PENDING)
  approved_at     String         @db.VarChar(50)
  created_at      String         @default("") @db.VarChar(50)
  updated_at      String         @default("") @db.VarChar(50)
  work_orders     work_orders    @relation(fields: [work_order_id], references: [id])

  @@index([work_order_id], name: "work_order_approvals_work_order_idx")
  @@map("work_order_approvals")
}

model invoices {
  id             BigInt          @id @default(autoincrement())
  work_order_id  BigInt          @default(0)
  invoice_number String          @db.VarChar(50)
  invoice_date   String          @db.VarChar(50)
  due_date       String          @db.VarChar(50)
  total_amount   Decimal         @db.Decimal(10, 2)
  status         InvoiceStatus   @default(PENDING)
  currency_id    Int             @default(0)
  created_at     String          @db.VarChar(50)
  updated_at     String          @db.VarChar(50)
  work_orders    work_orders     @relation(fields: [work_order_id], references: [id])
  invoice_items  invoice_items[]
  payments       payments[]

  @@index([work_order_id], name: "invoices_work_order_idx")
  @@map("invoices")
}

model invoice_items {
  id          BigInt   @id @default(autoincrement())
  invoice_id  BigInt   @default(0)
  service_id  BigInt   @default(0)
  part_id     BigInt   @default(0)
  quantity    Int      @default(0)
  unit_price  Decimal  @db.Decimal(10, 2)
  total_price Decimal  @db.Decimal(10, 2)
  description String   @db.Text
  created_at  String   @db.VarChar(50)
  updated_at  String   @db.VarChar(50)
  invoices    invoices @relation(fields: [invoice_id], references: [id])
  services    services @relation(fields: [service_id], references: [id])
  parts       parts    @relation(fields: [part_id], references: [id])

  @@index([invoice_id], name: "invoice_items_invoice_idx")
  @@index([service_id], name: "invoice_items_service_idx")
  @@index([part_id], name: "invoice_items_part_idx")
  @@map("invoice_items")
}

model payments {
  id             BigInt        @id @default(autoincrement())
  invoice_id     BigInt
  payment_date   String        @db.VarChar(50)
  payment_amount Decimal       @db.Decimal(12, 2)
  payment_method PaymentMethod
  payment_status PaymentStatus
  transaction_id String        @db.VarChar(100)
  created_at     String        @db.VarChar(50)
  updated_at     String        @db.VarChar(50)
  invoices       invoices      @relation(fields: [invoice_id], references: [id])

  @@index([invoice_id], name: "payments_invoice_idx")
  @@map("payments")
}

model notifications {
  id                BigInt             @id @default(autoincrement())
  user_id           BigInt
  notification_type NotificationType
  message           String             @db.Text
  status            NotificationStatus
  created_at        String             @db.VarChar(50)
  updated_at        String             @db.VarChar(50)
  users             users              @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "notifications_user_idx")
  @@map("notifications")
}

model email_templates {
  id         BigInt @id @default(autoincrement())
  name       String @db.VarChar(100)
  subject    String @db.VarChar(255)
  body       String @db.Text
  created_at String @db.VarChar(50)
  updated_at String @db.VarChar(50)
}

model audit_logs {
  id          BigInt  @id @default(autoincrement())
  user_id     BigInt
  action      String  @db.VarChar(255)
  entity_type LogType
  entity_id   BigInt
  changes     String  @db.Text
  created_at  String  @db.VarChar(50)
  updated_at  String  @db.VarChar(50)
  users       users   @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "audit_logs_user_idx")
  @@map("audit_logs")
}

model tokens {
  id              Int      @id @default(autoincrement())
  organization_id BigInt
  user_id         BigInt
  token           String   @unique
  type            String
  expires         DateTime
  blacklisted     Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  users           users    @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "tokens_user_idx")
  @@map("tokens")
}

model employee_role {
  id              BigInt        @id @default(autoincrement())
  organization_id BigInt        @default(0)
  name            String
  is_active       Int           @default(1) @db.SmallInt
  created_at      String?       @default("") @db.VarChar(50)
  updated_at      String?       @default("") @db.VarChar(50)
  organizations   organizations @relation(fields: [organization_id], references: [id])
  employee        employee[]

  @@index([organization_id], map: "employee_role_organization_idx")
  @@map("employee_role")
}

model employee {
  id               BigInt        @id @default(autoincrement())
  user_id          BigInt        
  organization_id  BigInt        @default(0)
  // first_name       String?       @default("")
  // last_name        String?       @default("")
  // email            String?       @default("")
  // phone            String?       @default("")
  gender           String?       @default("")
  address          String?       @default("")
  city             String?       @default("")
  state            String?       @default("")
  country          String?       @default("")
  pincode          String?       @default("")
  skill            Json?         @default("[]")
  experience_years String?       @default("")
  employee_role_id BigInt
  created_at       String?       @default("") @db.VarChar(50)
  updated_at       String?       @default("") @db.VarChar(50)
  organizations    organizations @relation(fields: [organization_id], references: [id])
  users            users         @relation(fields: [user_id], references: [id])
  employee_role    employee_role @relation(fields: [employee_role_id], references: [id])

  @@index([organization_id], map: "employee_organization_idx")
  @@index([user_id], map: "employee_user_idx")
  @@index([employee_role_id], map: "employee_employee_role_idx")
  @@map("employee")
}
